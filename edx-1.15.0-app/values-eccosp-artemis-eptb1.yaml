# The commented parameters have default values but these defaults can be overridden when enabled

# config for eccosp-artemis
eccosp-artemis: # type of ECCoSP component. Can be ecp-endpoint, ecp-directory, ecp-broker, ecp-artemis
  enabled: true # boolean flag which defines whether the component will be deployed or not
  instance: # array of ECCoSP Artemis instances - one values file can hold multiple instances
    - name: artemis-eptb1 # name of kubernetes instance
      image: # section for information about Docker image
        name: entsoe/eccosp-artemis # URL to docker image.
        tag: 4.15.0 # Docker image tag - version or 'latest'
#        pullPolicy: IfNotPresent # Pull policy specifies when the image should be pulled, it is possible to use 'Always' so on every pod (re)start is pulled
      replicaCount: 1 # number of replicas - ECCoSP Artemis cluster
      resourcesK8s: # section for CPU and memory specification
        requests: # minimum guaranteed amount of a resource that is reserved for a container
          cpu: 500m # minimum CPU - one CPU = 1000m or 1
          ephemeralStorage: 256Mi # minimum ephemeral storage for application
          memory: 1Gi # minimum memory for container - 1Gi is equal to 1024 Mi
        limits: # maximum amount of a resource to be used by a container. Should be always higher than application can allocate (xmx)
          cpu: 1000m # maximum CPU
          memory: 5Gi # maximum memory for container - 5Gi is equal to 5120 Mi

      storageData: 1Gi # certificates # storage certificates.
      storageLogs: 256Mi # logs # storage for logs
      sharedStorageSize: 100Mi # if SharedStorage for artemis is used, this amount of storage will be requested
      sharedStorageSizeJournal: 100Mi # if SharedStorage for artemis journal is used, this amount of storage will be requested
      sharedStorageClass: nfs-client # if SharedStorage for artemis is used, this storage class will be used to allocate shared storage resources
      sharedStorageClassJournal: nfs-client # if SharedStorage for artemis journal is used, this storage class will be used to allocate shared storage resources
      #sharedStorageAccessMode: ReadWriteMany # sharedStorageAccessMode class
      #storageLogsSize: 64Mi # size of logs storage
      keepLogsAfterRestart: false # boolean flag - indicates if Artemis logs are persisted after pod restart, default value false
      livenessProbe: false # automatic restart if pod is not in health state, default value false
      readinessProbe: true # Artemis pod will not started before readiness probe is fulfilled
      useSharedStorageForConfiguration: false # if enabled, all replicas of this pod will use shared storage for configs and certificates
      useSharedStorageForJournal: true # if enabled, all replicas of this pod will use shared storage for journal
      prometheusEnabled: true #boolean flag - indicates if Prometheus metrics is enabled

      artemisKeystoreLocation: /opt/eccosp-artemis/etc/keystore.jks
      artemisKeystorePassword: password

      service: # section for definition of services exposed within kubernetes environment
#        type: NodePort # Type of the network service - NodePort/LoadBalancer/ClusterIP
#        http: # protocol used for accessing GUI - can be http or https
#          port: 8162 # port used for exposing HTTP(S) service
        https: # protocol used for accessing GUI - can be http or https
          port: 8161 # port used for exposing HTTP(S) service
#          nodePort: 30161  # port used for exposing HTTP(S) service as for external access. Range - 30000-32767
        amqps: # protocol used for connection on AMQP interface of Artemis - can be AMQP or AMQPS
          port: 5672 # port used for exposing AMQP(S) service
#          nodePort: 30672  # port used for exposing AMQP(S) service as for external access. Range - 30000-32767
      ingress: # an object that allows access to Kubernetes services from outside the Kubernetes cluster.
        enabled: false # boolean flag for enable/disable ingress, default value false
#        apiVersion: networking.k8s.io/v1 # Specifies the api version of ingress resource
#        contextPath: / # context path for ingress, default value '/'
#        host: eccosp-artemis.eptb1.eccosp # URL on which the ECCoSP Artemis is exposed. Address needs to be aligned with hosting.
#        tls: # section for TLS definition for HTTPS connection to ingress
#          secretName: tls-secret  # secret where TLS certificate is stored
#        annotations: # ingress annotations section
#          kubernetes.io/ingress.class: nginx # ingress annotations - use nginx
#          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS" # important for remote host tunelling
#          nginx.ingress.kubernetes.io/ssl-passthrough: 'true' # important for remote host tunelling

      # The naming convention for configuration files name and parameters is camelCase instead of 'dot case format'.
      # Mapping of Helm values to ECCoSP Artemis configuration file is available in config map ./eccosp-artemis/templates/configMap.yaml
      brokerXml: # stands for broker.xml file
        default: # parent for default Artemis configuration
          ecpComponentCode: artemis-eptb1 # Artemis identification code in ECP network (EIC) for Audit logging
#          componentType: # Artemis component type ie. ECCo SP Artemis Internal Broker for Audit logging
#          artemisName: # Artemis name, value is shown in GUI
#          diskScanPeriod: # disk-scan-period
#          diskMaxUsage: # max-disk-usage
#          pageSyncTimeout: # page-sync-timeout
#          globalMaxSize: # global-max-size
#          globalMaxMessages: # global-max-messages

#        journal: # parent for Artemis journal configuration
#          persistenceEnabled: # persistence-enabled
#          maxRedeliveryRecords: # max-redelivery-records
#          type: # journal-type
#          dataSync: # journal-datasync
#          minFiles: # journal-min-files
#          poolFiles: # journal-pool-files
#          deviceBlockSize: # journal-device-block-size
#          fileSize: # journal-file-size
#          bufferTimeout: # journal-buffer-timeout
#          maxIO: # journal-max-io
#          pagingDirectory: # paging-directory
#          bindingsDirectory: # bindings-directory
#          journalDirectory: # journal-directory
#          largeMessagesDirectory: # large-messages-directory

#        criticalAnalyzer: # parent for Artemis critical analyzer configuration
#          enabled: # critical-analyzer
#          timeout: # critical-analyzer-timeout
#          checkPeriod: # critical-analyzer-check-period
#          policy: # critical-analyzer-policy

#        acceptor: # configuration of Artemis AMQP acceptor
#          ip: # IP where Artemis is listening on
#          port: # port where Artemis is listening on
#          protocols: # protocols
#          enabledProtocols: # enabledProtocols
#          enabledCipherSuites: # enabledCipherSuites
#          properties: # parent for acceptor attributes/values configuration
#            - parameterName: # name of acceptor attribute
#              value: # value of acceptor attribute
#            - parameterName: # name of acceptor attribute
#              value: # value of acceptor attribute

        addressSettings: # parent for Artemis address settings configuration
          defaultConfigurationEnabled: true # if true, default address settings configuration is enabled
#          match: # possibility to add configuration parameters
#            - ecp.queue.receive: # queue name, wildcard, you want to configure
#              - parameterName: "page-size-bytes" # name of queue attribute
#                value: "10M" # value of queue attribute
#            - ecp.queue.send: # queue name, wildcard, you want to configure
#              - parameterName: "page-size-bytes" # name of queue attribute
#                value: "20M" # value of queue attribute
# Artemis HA is configured via Shared Store approach. First node in the cluster, is always selected as master. Any other nodes are selected as backups/slaves. Details for internal communication are filled in automatically during deployment.
#        highAvailability: # parent for Artemis HA configuration
#          user: eccosp-artemis # HA cluster user
#          password: eccosp-artemis-cluster-password # HA cluster password
#          connectionName: ha-cluster # HA connection name
#          acceptor: # parent for Artemis HA configuration acceptor
#            ip: 0.0.0.0 # IP where Artemis HA acceptor is listening on
#            port: 61616 # port where Artemis HA acceptor is listening on
#            tcpSendBufferSize: # tcpSendBufferSize
#            tcpReceiveBufferSize: # tcpReceiveBufferSize
#            protocols: # protocols
#            enabledProtocols: # enabledProtocols
#            enabledCipherSuites: # enabledCipherSuites
#            properties: # parent for acceptor attributes/values configuration
#              - parameterName: # name of acceptor attribute
#                value: # value of acceptor attribute
#              - parameterName: # name of acceptor attribute
#                value: # value of acceptor attribute
      env:  # stands for env file
#        heapDumpPath: # path to java heap dump file
        resourcesJvm: # memory allocation for Artemis component
          xms: 128M # lower bound of java heap memory size
          xmx: 4G # upper bound of java heap memory size

      artemisUsers: # artemis-users.properties
        - login: endpoint # username for Artemis console
          password: password # password for Artemis console
        - login: toolbox # username for Artemis console
          password: password # password for Artemis console

#      volumeMounts:  # volume mounts - can be used for mapping config files or storages
#        - name: config  # name of volume mounts for config
#          subPath: login.config  # name of configuration file
#          mountPath: /opt/eccosp-artemis/etc/login.config # path where config file will be mounted

#      configMap: # config maps array
#        - subPath: login.config # name of config file/volume mount
#          content: |- # content is shifted by two spaces
#            /*
#              * Licensed to the Apache Software Foundation (ASF) under one or more
#              * contributor license agreements.  See the NOTICE file distributed with
#              * this work for additional information regarding copyright ownership.
#              * The ASF licenses this file to You under the Apache License, Version 2.0
#              * (the "License"); you may not use this file except in compliance with
#              * the License.  You may obtain a copy of the License at
#              *
#              * http://www.apache.org/licenses/LICENSE-2.0
#              *
#              * Unless required by applicable law or agreed to in writing, software
#              * distributed under the License is distributed on an "AS IS" BASIS,
#              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#              * See the License for the specific language governing permissions and
#              * limitations under the License.
#              */

#             activemq {
#                org.apache.activemq.artemis.spi.core.security.jaas.PropertiesLoginModule required
#                    debug=false
#                    reload=true
#                    org.apache.activemq.jaas.properties.user="artemis-users.properties"
#                    org.apache.activemq.jaas.properties.role="artemis-roles.properties";
#             };

# See ECP Kubernetes Guide, Shared Folder Configuration – Custom Volume Mounts
#      volumeClaimTemplates:
#        - metadata:
#            name: cd # volume name
#          spec:
#            accessModes: [ "ReadWriteMany" ] # storage of type ReadWriteMany
#            storageClassName: nfs-storage # name of storage class - needs to be provided by Kubernetes administrator
#            resources:
#              requests:
#                storage: 512Mi # request for storage size

# global config
global: # global config
  storage: # storage section
    class: standard # storage class – needs to be provided by Kubernetes cluster administrator
  imagePullSecrets: # secrets which hold information about login to docker repository
    - name: regcred # name of secret – name is defined by Kubernetes cluster administrator
